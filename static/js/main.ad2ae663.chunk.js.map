{"version":3,"sources":["reportWebVitals.js","Components/_StyledComponents.jsx","MobxStores/Domain_Stores/TaskStore.js","MobxStores/UI_Stores/CreateEditModalStore.js","MobxStores/UI_Stores/TaskInfoModalStore.js","MobxStores/RootStore.js","Components/CreateAndEditModal.jsx","Components/CreateTask.jsx","Config.js","Components/TaskItem.jsx","Components/DoneTasks.jsx","Components/TasksList.jsx","Components/TaskModalInfo.jsx","Pages/HomePage.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","orange","green","blue","red","OrangeButton","styled","Button","color","backgroundColor","GreenButton","BlueButton","RedButton","CircleFixedButton","Fab","position","bottom","right","CenterFlexBox","Box","display","justifyContent","TaskListBox","marginTop","border","borderColor","padding","borderRadius","cursor","CenterTypography","Typography","textAlign","DescriptionTypography","fontsize","CircleBox","width","height","marginLeft","top","FlexEndBox","DoneTaskIcon","DoneOutlinedIcon","CustomDialogTitle","DialogTitle","TaskStore","tasks","makeObservable","this","observable","addTask","action","editTask","doneTask","deleteTask","doneTasks","computed","numTasks","allTasks","taskReport","autorun","console","log","doneTaskReport","numTasksReport","length","task","lastId","id","push","index","findIndex","x","taskId","find","done","filter","map","title","gifts","priority","desc","CreateEditModalStore","state","isOpen","isEdit","editTaskId","openForCreate","openForEdit","close","reportState","TaskInfoModalStore","open","RootStore","StoreContext","React","createContext","Provider","children","value","useStore","useContext","observer","useState","setOpen","setTitle","titleValidation","setTitleValidation","setDesc","descValidation","setDescValidation","setGifts","giftsValidation","setGiftsValidation","setDone","setPriority","store","modalStore","modalState","taskStore","closeDialog","useEffect","Dialog","onClose","DialogContent","Stack","spacing","sx","TextField","autoFocus","label","fullWidth","error","helperText","variant","onChange","e","target","trim","multiline","rows","RadioGroup","aria-label","name","row","defaultValue","parseInt","FormControlLabel","control","Radio","DialogActions","onClick","validate","validation","createEditModalStore","clickAddBtn","PriorityEnum","haveActions","infoModalStore","tagName","fontSize","substr","direction","setTask","marginRight","HomePage","Container","maxWidth","paddingBottom","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ad2ae663.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { Button, DialogTitle, Fab, Typography } from \"@mui/material\";\r\nimport { Box, styled } from \"@mui/system\";\r\nimport DoneOutlinedIcon from \"@mui/icons-material/DoneOutlined\";\r\n\r\nlet orange = { color: \"#ed9720\", hoverColor: \"#f58e00\" };\r\nlet green = { color: \"#71dd1b\", hoverColor: \"#52a114\" };\r\nlet blue = { color: \"#4a86e8\", hoverColor: \"#07398b\" };\r\nlet red = { color: \"red\", hoverColor: \"#f74d4d\" };\r\nlet black = \"#f0f0f0\";\r\nlet gray = \"gray\";\r\n\r\nexport const OrangeButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: orange.color,\r\n  \"&:hover\": {\r\n    backgroundColor: orange.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const GreenButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: green.color,\r\n  \"&:hover\": {\r\n    backgroundColor: green.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const BlueButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: blue.color,\r\n  \"&:hover\": {\r\n    backgroundColor: blue.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const RedButton = styled(Button)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: red.color,\r\n  \"&:hover\": {\r\n    backgroundColor: red.hoverColor,\r\n  },\r\n}));\r\n\r\nexport const CircleFixedButton = styled(Fab)(() => ({\r\n  color: \"white\",\r\n  backgroundColor: orange.color,\r\n  \"&:hover\": {\r\n    backgroundColor: orange.hoverColor,\r\n  },\r\n  position: \"fixed\",\r\n  bottom: \"50px\",\r\n  right: \"50px\",\r\n}));\r\n\r\nexport const CenterFlexBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n}));\r\n\r\nexport const TaskListBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  marginTop: \"10px\",\r\n  border: \"1px solid\",\r\n  borderColor: black,\r\n  padding: \"10px 20px\",\r\n  borderRadius: \"8px\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport const CenterTypography = styled(Typography)(() => ({\r\n  textAlign: \"center\",\r\n}));\r\n\r\nexport const DescriptionTypography = styled(Typography)(() => ({\r\n  fontsize: 13,\r\n  color: gray,\r\n}));\r\n\r\nexport const CircleBox = styled(Typography)(() => ({\r\n  display: \"inline-block\",\r\n  width: \"16px\",\r\n  height: \"16px\",\r\n  borderRadius: \"8px\",\r\n  marginLeft: \"5px\",\r\n  position: \"relative\",\r\n  top: \"4px\",\r\n}));\r\n\r\nexport const FlexEndBox = styled(Box)(() => ({\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n}));\r\n\r\nexport const DoneTaskIcon = styled(DoneOutlinedIcon)(() => ({\r\n  backgroundColor: green.color,\r\n  borderRadius: \"15px\",\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  color: \"white\",\r\n}));\r\n\r\nexport const CustomDialogTitle = styled(DialogTitle)(() => ({\r\n  \"@media (max-width: 520px)\": {\r\n    width: \"260px\",\r\n  },\r\n  \"@media (min-width:520px) and (max-width: 670px)\": {\r\n    width: \"400px\",\r\n  },\r\n  \"@media (min-width: 670px)\": {\r\n    width: \"550px\",\r\n  },\r\n}));","import { action, computed, observable, autorun, makeObservable } from \"mobx\";\r\n\r\nexport default class TaskStore {\r\n  tasks = [];\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      tasks: observable,\r\n      addTask: action,\r\n      editTask: action,\r\n      doneTask: action,\r\n      deleteTask: action,\r\n      doneTasks: computed,\r\n      numTasks: computed,\r\n      allTasks: computed,\r\n    });\r\n    this.taskReport = autorun(() => {\r\n      console.log(\"---------------\");\r\n      console.log(\"All Tasks:\");\r\n      console.log(this.allTasks);\r\n      console.log(\"---------------\");\r\n    });\r\n    this.doneTaskReport = autorun(() => {\r\n      console.log(\"---------------\");\r\n      console.log(\"Done Tasks:\");\r\n      console.log(this.doneTasks);\r\n      console.log(\"---------------\");\r\n    });\r\n    this.numTasksReport = autorun(() => {\r\n      console.log(\"---------------\");\r\n      console.log(\"number of Tasks: \" + this.tasks.length);\r\n      console.log(\"---------------\");\r\n    });\r\n  }\r\n\r\n  addTask(task) {\r\n    let lastId = this.tasks.length + 1;\r\n    task.id = lastId;\r\n    this.tasks.push(task);\r\n  }\r\n\r\n  editTask(task) {\r\n    let index = this.tasks.findIndex((x) => x.id === task.id);\r\n    this.tasks[index] = task;\r\n  }\r\n\r\n  doneTask(taskId) {\r\n    this.tasks.find((x) => x.id === taskId).done = true;\r\n  }\r\n\r\n  deleteTask(taskId){\r\n    this.tasks = this.tasks.filter(x => x.id != taskId);\r\n  }\r\n\r\n  get doneTasks() {\r\n    return this.tasks\r\n      .filter((x) => x.done)\r\n      .map((x) => {\r\n        return {\r\n          id: x.id,\r\n          title: x.title,\r\n          gifts: x.gifts,\r\n          priority: x.priority,\r\n          done: x.done,\r\n          desc:x.desc\r\n        };\r\n      });\r\n  }\r\n\r\n  get numTasks() {\r\n    return this.tasks.length;\r\n  }\r\n\r\n  get allTasks() {\r\n    return this.tasks.map((x) => {\r\n      return {\r\n        id: x.id,\r\n        title: x.title,\r\n        gifts: x.gifts,\r\n        priority: x.priority,\r\n        done: x.done,\r\n        desc:x.desc\r\n      };\r\n    });\r\n  }\r\n}\r\n","import { action, computed, observable, autorun, makeObservable } from \"mobx\";\r\n\r\nexport default class CreateEditModalStore {\r\n  state = {\r\n    isOpen: false,\r\n    isEdit: false,\r\n    editTaskId: 0,\r\n  };\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      state: observable,\r\n      openForCreate: action,\r\n      openForEdit: action,\r\n      close: action,\r\n      reportState: computed,\r\n    });\r\n    autorun(() => {\r\n      console.log('---------------');\r\n      console.log(\"createEditModal State:\");\r\n      console.log(this.reportState);\r\n      console.log('---------------');\r\n    });\r\n  }\r\n\r\n  openForCreate() {\r\n    this.state = {\r\n      isOpen: true,\r\n      isEdit: false,\r\n      editTaskId: 0,\r\n    };\r\n  }\r\n\r\n  openForEdit(taskId) {\r\n    this.state = {\r\n      isOpen: true,\r\n      isEdit: true,\r\n      editTaskId: taskId,\r\n    };\r\n  }\r\n  close() {\r\n    this.state = {\r\n      isOpen: false,\r\n      isEdit: false,\r\n      editTaskId: 0,\r\n    };\r\n  }\r\n\r\n  get reportState() {\r\n    return {\r\n      isOpen: this.state.isOpen,\r\n      isEdit: this.state.isEdit,\r\n      taskId: this.state.editTaskId,\r\n    };\r\n  }\r\n}\r\n","import { action, computed, observable, autorun, makeObservable } from \"mobx\";\r\n\r\nexport default class TaskInfoModalStore {\r\n  state = {\r\n    isOpen: false,\r\n    taskId: 0,\r\n  };\r\n\r\n  constructor() {\r\n    makeObservable(this, {\r\n      state: observable,\r\n      open: action,\r\n      close: action,\r\n      reportState: computed,\r\n    });\r\n    autorun(() => {\r\n      console.log('---------------');\r\n      console.log(\"createEditModal State:\");\r\n      console.log(this.reportState);\r\n      console.log('---------------');\r\n    });\r\n  }\r\n\r\n  open(id) {\r\n    this.state = {\r\n      isOpen: true,\r\n      taskId: id,\r\n    };\r\n  }\r\n\r\n  close() {\r\n    this.state = {\r\n      isOpen: false,\r\n      taskId: 0,\r\n    };\r\n  }\r\n\r\n  get reportState() {\r\n    return {\r\n      isOpen: this.state.isOpen,\r\n      taskId: this.state.taskId,\r\n    };\r\n  }\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport TaskStore from \"./Domain_Stores/TaskStore\";\r\nimport CreateEditModalStore from './UI_Stores/CreateEditModalStore';\r\nimport TaskInfoModalStore from \"./UI_Stores/TaskInfoModalStore\";\r\n\r\nclass RootStore {\r\n  constructor() {\r\n    this.TaskStore = new TaskStore();\r\n    this.CreateEditModalStore = new CreateEditModalStore();\r\n    this.TaskInfoModalStore = new TaskInfoModalStore();\r\n  }\r\n}\r\n\r\nconst StoreContext = React.createContext(null);\r\n\r\nexport const Provider = ({ children }) => (\r\n  <StoreContext.Provider value={new RootStore()}>{children}</StoreContext.Provider>\r\n);\r\n\r\nexport const useStore = () => useContext(StoreContext);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  FormControlLabel,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { CustomDialogTitle } from \"./_StyledComponents\";\r\nimport { useStore } from \"../MobxStores/RootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nfunction CreateEditModal() {\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [titleValidation, setTitleValidation] = useState(null);\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [descValidation, setDescValidation] = useState(null);\r\n  const [gifts, setGifts] = useState(\"\");\r\n  const [giftsValidation, setGiftsValidation] = useState(null);\r\n  const [done, setDone] = useState(false);\r\n  const [priority, setPriority] = useState(0);\r\n\r\n  //mobx\r\n  const store = useStore();\r\n  const modalStore = store.CreateEditModalStore;\r\n  const modalState = modalStore.reportState;\r\n  const taskStore = store.TaskStore;\r\n  const tasks = taskStore.tasks;\r\n\r\n  //open and close modal and reset values\r\n  const closeDialog = () => {\r\n    setOpen(false);\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n    setGifts(\"\");\r\n    setTitleValidation(null);\r\n    setDescValidation(null);\r\n    setGiftsValidation(null);\r\n    setPriority(0);\r\n    setDone(false);\r\n    if (open) modalStore.close();\r\n  };\r\n\r\n  const openDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  //validations and create or edit task\r\n  const validation = () => {\r\n    let validate = true;\r\n    if (title.trim().length === 0) {\r\n      validate = false;\r\n      setTitleValidation(\"Please enter title\");\r\n    }\r\n    if (desc.trim().length === 0) {\r\n      validate = false;\r\n      setDescValidation(\"Please enter description\");\r\n    }\r\n    if (gifts.trim().length === 0) {\r\n      validate = false;\r\n      setGiftsValidation(\"Please enter gifts\");\r\n    }\r\n    return validate;\r\n  };\r\n\r\n  const createOrEditTask = () => {\r\n    if (!validation()) return;\r\n    let task = { title, desc, gifts, priority, done };\r\n\r\n    if (modalState.isEdit) {\r\n      task.id = modalState.taskId;\r\n      taskStore.editTask(task);\r\n    } else {\r\n      taskStore.addTask(task);\r\n    }\r\n    closeDialog();\r\n  };\r\n\r\n  //Form control events\r\n  const titleChange = (e) => {\r\n    setTitle(e.target.value);\r\n    if (e.target.value.trim().length > 0) setTitleValidation(null);\r\n  };\r\n\r\n  const descChange = (e) => {\r\n    setDesc(e.target.value);\r\n    if (e.target.value.trim().length > 0) setDescValidation(null);\r\n  };\r\n\r\n  const giftsChange = (e) => {\r\n    setGifts(e.target.value);\r\n    if (e.target.value.trim().length > 0) setGiftsValidation(null);\r\n  };\r\n\r\n  const priorityChange = (e) => setPriority(parseInt(e.target.value));\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    if (modalState.isOpen) {\r\n      openDialog();\r\n\r\n      if (modalState.isEdit) {\r\n        let task = tasks.find((x) => x.id === modalState.taskId);\r\n        setTitle(task.title);\r\n        setDesc(task.desc);\r\n        setGifts(task.gifts);\r\n        setPriority(task.priority);\r\n        setDone(task.done);\r\n      }\r\n    } else {\r\n      closeDialog();\r\n    }\r\n  }, [modalState]);\r\n\r\n  return (\r\n    <>\r\n      <Dialog open={open} onClose={closeDialog}>\r\n        <CustomDialogTitle>\r\n          {modalState.isEdit\r\n            ? `Edit ${tasks.find((x) => x.id === modalState.taskId).title} Task`\r\n            : \"Create a new task\"}\r\n        </CustomDialogTitle>\r\n        <DialogContent>\r\n          <Stack spacing={2} sx={{ marginTop: 2 }}>\r\n            <TextField\r\n              autoFocus\r\n              label=\"Task Title\"\r\n              fullWidth\r\n              error={titleValidation === null ? false : true}\r\n              helperText={titleValidation === null ? \"\" : titleValidation}\r\n              variant=\"outlined\"\r\n              value={title}\r\n              onChange={titleChange}\r\n            />\r\n            <TextField\r\n              label=\"Task description\"\r\n              fullWidth\r\n              error={descValidation === null ? false : true}\r\n              helperText={descValidation === null ? \"\" : descValidation}\r\n              variant=\"outlined\"\r\n              multiline\r\n              rows={5}\r\n              value={desc}\r\n              onChange={descChange}\r\n            />\r\n            <TextField\r\n              label=\"Gifts and KPIs\"\r\n              fullWidth\r\n              error={giftsValidation === null ? false : true}\r\n              helperText={giftsValidation === null ? \"\" : giftsValidation}\r\n              variant=\"outlined\"\r\n              value={gifts}\r\n              onChange={giftsChange}\r\n            />\r\n          </Stack>\r\n\r\n          <RadioGroup\r\n            aria-label=\"gender\"\r\n            name=\"controlled-radio-buttons-group\"\r\n            row\r\n            sx={{ marginTop: 1 }}\r\n            defaultValue={0}\r\n            value={priority}\r\n            onChange={priorityChange}\r\n          >\r\n            <FormControlLabel value={0} control={<Radio />} label=\"Low\" />\r\n            <FormControlLabel value={1} control={<Radio />} label=\"Medium\" />\r\n            <FormControlLabel value={2} control={<Radio />} label=\"High\" />\r\n          </RadioGroup>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={createOrEditTask}\r\n          >\r\n            {modalState.isEdit ? \"Edit Task\" : \"Add to tasks\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(CreateEditModal);\r\n","import React from \"react\";\r\nimport {\r\n  CenterFlexBox,\r\n  CircleFixedButton,\r\n  OrangeButton,\r\n} from \"./_StyledComponents\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../MobxStores/RootStore\";\r\n\r\nconst CreateTask = () => {\r\n  //mobx\r\n  const store = useStore();\r\n  const numTasks = store.TaskStore.numTasks;\r\n  const createEditModalStore = store.CreateEditModalStore;\r\n\r\n  const clickAddBtn = () => {\r\n    createEditModalStore.openForCreate();\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <>\r\n        {numTasks === 0 ? (\r\n          <CenterFlexBox sx={{ marginTop: 25 }}>\r\n            <OrangeButton variant=\"contained\" onClick={clickAddBtn}>\r\n              Create your first task\r\n            </OrangeButton>\r\n          </CenterFlexBox>\r\n        ) : (\r\n          <CircleFixedButton onClick={clickAddBtn}>\r\n            <AddIcon />\r\n          </CircleFixedButton>\r\n        )}\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(CreateTask);\r\n","export const PriorityEnum = [\r\n    { id: 0, title: \"Low\", color: \"#71dd1b\" },\r\n    { id: 1, title: \"Medium\", color: \"#e5e510\" },\r\n    { id: 2, title: \"High\", color: \"red\" },\r\n  ];","import { Typography, Stack } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { PriorityEnum } from \"../Config\";\r\nimport { useStore } from \"../MobxStores/RootStore\";\r\nimport {\r\n  CircleBox,\r\n  DescriptionTypography,\r\n  TaskListBox,\r\n  OrangeButton,\r\n  FlexEndBox,\r\n  GreenButton,\r\n  DoneTaskIcon,\r\n} from \"./_StyledComponents\";\r\n\r\nconst TaskItem = ({ task, haveActions }) => {\r\n  //Priority Info\r\n  const priority = PriorityEnum.find((x) => x.id === task.priority);\r\n\r\n  //mobx\r\n  const store = useStore();\r\n  const modalStore = store.CreateEditModalStore;\r\n  const taskStore = store.TaskStore;\r\n  const infoModalStore = store.TaskInfoModalStore;\r\n\r\n  const edit = () => {\r\n    modalStore.openForEdit(task.id);\r\n  };\r\n\r\n  const done = () => {\r\n    taskStore.doneTask(task.id);\r\n  };\r\n\r\n  const openInfoModal = (e) => {\r\n    if (!haveActions || e.target.tagName === \"BUTTON\") return;\r\n    infoModalStore.open(task.id);\r\n  };\r\n\r\n  return (\r\n    <TaskListBox\r\n      sx={{ marginTop: 1, border: \"1px solid black\" }}\r\n      onClick={openInfoModal}\r\n    >\r\n      <Box>\r\n        <Typography variant=\"h6\">{task.title}</Typography>\r\n        <DescriptionTypography sx={{ fontSize: 13, color: \"gray\" }}>\r\n          {task.desc.trim().length > 50\r\n            ? task.desc.substr(0, 50) + \" ...\"\r\n            : task.desc}\r\n        </DescriptionTypography>\r\n      </Box>\r\n      <Box>\r\n        <FlexEndBox>\r\n          <Typography variant=\"span\">{priority?.title}</Typography>\r\n          <CircleBox sx={{ backgroundColor: priority?.color }}></CircleBox>\r\n        </FlexEndBox>\r\n        {haveActions ? (\r\n          <Stack direction=\"row\" spacing={1} sx={{ marginTop: 1 }}>\r\n            {task.done ? (\r\n              <DoneTaskIcon />\r\n            ) : (\r\n              <GreenButton onClick={done} sx={{ height: \"30px\" }}>\r\n                Done\r\n              </GreenButton>\r\n            )}\r\n\r\n            <OrangeButton onClick={edit} sx={{ height: \"30px\" }}>\r\n              Edit\r\n            </OrangeButton>\r\n          </Stack>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n    </TaskListBox>\r\n  );\r\n};\r\n\r\nexport default observer(TaskItem);\r\n","import {\r\n    Button,\r\n    Dialog,\r\n    DialogActions,\r\n    DialogContent,\r\n    Typography,\r\n  } from \"@mui/material\";\r\n  import { Box } from \"@mui/system\";\r\n  import React, { useEffect, useState } from \"react\";\r\n  import { BlueButton, CustomDialogTitle } from \"./_StyledComponents\";\r\n  import TaskItem from \"./TaskItem\";\r\n  import {useStore} from './../MobxStores/RootStore';\r\nimport { observer } from \"mobx-react-lite\";\r\n  \r\n  const DoneTasks = () => {\r\n    const [open, setOpen] = useState(false);\r\n  \r\n    const openDialog = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const closeDialog = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    const doneTasks = useStore().TaskStore.doneTasks;\r\n  \r\n    return (\r\n      <>\r\n        {doneTasks.length > 0 ? (\r\n          <Box sx={{ marginTop: 5 }}>\r\n            <BlueButton onClick={openDialog}>View Done Tasks</BlueButton>\r\n  \r\n            <Dialog open={open} onClose={closeDialog}>\r\n              <CustomDialogTitle>Done Tasks</CustomDialogTitle>\r\n              <DialogContent>\r\n                {doneTasks.length > 0 ? (\r\n                  <>\r\n                    {doneTasks.map((task, index) => {\r\n                      return (\r\n                        <TaskItem task={task} key={index} haveActions={false} />\r\n                      );\r\n                    })}\r\n                  </>\r\n                ) : (\r\n                  <Typography>You have not any done task</Typography>\r\n                )}\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n                  Close\r\n                </Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default observer(DoneTasks);","import { Box } from \"@mui/system\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useStore } from \"../MobxStores/RootStore\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nconst TasksList = () => {\r\n  const tasks = useStore().TaskStore.tasks;\r\n\r\n  return (\r\n    <>\r\n      {tasks.length > 0 ? (\r\n        <Box>\r\n          {tasks.map((task, index) => {\r\n            return <TaskItem task={task} haveActions={true} key={index} />;\r\n          })}\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default observer(TasksList);","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { PriorityEnum } from \"../Config\";\r\nimport { useStore } from \"../MobxStores/RootStore\";\r\nimport {\r\n  CenterTypography,\r\n  CircleBox,\r\n  CustomDialogTitle,\r\n  DoneTaskIcon,\r\n  GreenButton,\r\n  OrangeButton,\r\n  RedButton,\r\n} from \"./_StyledComponents\";\r\n\r\nconst TaskInfoModal = () => {\r\n  const [open, setOpen] = useState(false);\r\n  const [task, setTask] = useState();\r\n\r\n  //mobx\r\n  const store = useStore();\r\n  const modalStore = store.TaskInfoModalStore;\r\n  const modalState = modalStore.state;\r\n  const taskStore = store.TaskStore;\r\n  const tasks = taskStore.tasks;\r\n\r\n  const createEditModalStore = store.CreateEditModalStore;\r\n\r\n  //Priority Info\r\n  const priority = PriorityEnum.find((x) => x.id === task?.priority);\r\n\r\n  //Modal Actions\r\n  const openDialog = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    if (open) modalStore.close();\r\n    setOpen(false);\r\n  };\r\n\r\n  const done = () => {\r\n    taskStore.doneTask(task.id);\r\n  };\r\n\r\n  const edit = () => {\r\n    closeDialog();\r\n    createEditModalStore.openForEdit(task.id);\r\n  };\r\n\r\n  const delet = () => {\r\n    closeDialog();\r\n    taskStore.deleteTask(task.id);\r\n  };\r\n\r\n  //Effects\r\n  useEffect(() => {\r\n    if (modalState.isOpen) {\r\n      openDialog();\r\n      setTask(tasks.find((x) => x.id === modalState.taskId));\r\n    } else {\r\n      closeDialog();\r\n    }\r\n  }, [modalState]);\r\n  return (\r\n    <div>\r\n      <Dialog open={open} onClose={closeDialog}>\r\n        <CustomDialogTitle>\r\n          <Box>\r\n            <CenterTypography variant=\"h6\">\r\n              Task Number {task?.id} ({task?.title})\r\n            </CenterTypography>\r\n          </Box>\r\n          <Box>\r\n            <CircleBox sx={{ backgroundColor: priority?.color }}></CircleBox>\r\n            <Typography variant=\"span\" sx={{ marginLeft: 1 }}>\r\n              {priority?.title}\r\n            </Typography>\r\n          </Box>\r\n        </CustomDialogTitle>\r\n        <DialogContent>\r\n          <Typography sx={{ padding: \"0 10px\" }}>{task?.desc}</Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          {task?.done ? (\r\n            <DoneTaskIcon sx={{ marginRight: \"10px\" }} />\r\n          ) : (\r\n            <GreenButton onClick={done}>Done</GreenButton>\r\n          )}\r\n          <OrangeButton onClick={edit}>Edit</OrangeButton>\r\n          <RedButton onClick={delet}>Delete</RedButton>\r\n          <Button variant=\"outlined\" color=\"error\" onClick={closeDialog}>\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default observer(TaskInfoModal);\r\n","import { Container } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CreateEditModal from \"../Components/CreateAndEditModal\";\r\nimport CreateTask from \"../Components/CreateTask\";\r\nimport DoneTasks from \"../Components/DoneTasks\";\r\nimport { CenterTypography } from \"../Components/_StyledComponents\";\r\nimport TasksList from \"../Components/TasksList\";\r\nimport TaskInfoModal from \"../Components/TaskModalInfo\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <Container maxWidth=\"md\" sx={{ paddingBottom: 7 }}>\r\n      <CenterTypography sx={{ marginTop: 7 }} variant=\"h4\">\r\n        Hello World\r\n      </CenterTypography>\r\n      <CreateTask />\r\n      <CreateEditModal />\r\n      <DoneTasks />\r\n      <TasksList />\r\n      <TaskInfoModal />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default HomePage;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport HomePage from \"./Pages/HomePage\";\nimport {Provider} from './MobxStores/RootStore';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider>\n      <HomePage />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}